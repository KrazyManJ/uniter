from typing import overload
from uniter.Uniter import Unit
from uniter.units import *

@overload
def average_speed(distance: None = ..., speed: Any = ..., time: Any = ...) -> Any: ...

@overload
def average_speed(distance: Any = ..., speed: None = ..., time: Any = ...) -> Any: ...

@overload
def average_speed(distance: Any = ..., speed: Any = ..., time: None = ...) -> Any: ...

def average_speed(distance: Any | None = ..., speed: Any | None = ..., time: Any | None = ...) -> Unit: ...

@overload
def cylinder_surface(radius: None = ..., height: Any = ..., surface: Any = ...) -> Any: ...

@overload
def cylinder_surface(radius: Any = ..., height: None = ..., surface: Any = ...) -> Any: ...

@overload
def cylinder_surface(radius: Any = ..., height: Any = ..., surface: None = ...) -> Any: ...

def cylinder_surface(radius: Any | None = ..., height: Any | None = ..., surface: Any | None = ...) -> Unit: ...

@overload
def cylinder_volume(radius: None = ..., height: Any = ..., volume: Any = ...) -> Any: ...

@overload
def cylinder_volume(radius: Any = ..., height: None = ..., volume: Any = ...) -> Any: ...

@overload
def cylinder_volume(radius: Any = ..., height: Any = ..., volume: None = ...) -> Any: ...

def cylinder_volume(radius: Any | None = ..., height: Any | None = ..., volume: Any | None = ...) -> Unit: ...

@overload
def density_formula(mass: None = ..., volume: Any = ..., density: Any = ...) -> Any: ...

@overload
def density_formula(mass: Any = ..., volume: None = ..., density: Any = ...) -> Any: ...

@overload
def density_formula(mass: Any = ..., volume: Any = ..., density: None = ...) -> Any: ...

def density_formula(mass: Any | None = ..., volume: Any | None = ..., density: Any | None = ...) -> Unit: ...

@overload
def ohms_law(electric_current: None = ..., voltage: Any = ..., resistance: Any = ...) -> Any: ...

@overload
def ohms_law(electric_current: Any = ..., voltage: None = ..., resistance: Any = ...) -> Any: ...

@overload
def ohms_law(electric_current: Any = ..., voltage: Any = ..., resistance: None = ...) -> Any: ...

def ohms_law(electric_current: Any | None = ..., voltage: Any | None = ..., resistance: Any | None = ...) -> Unit: ...

@overload
def sphere_surface(radius: None = ..., surface: Any = ...) -> Any: ...

@overload
def sphere_surface(radius: Any = ..., surface: None = ...) -> Any: ...

def sphere_surface(radius: Any | None = ..., surface: Any | None = ...) -> Unit: ...

@overload
def sphere_volume(radius: None = ..., volume: Any = ...) -> Any: ...

@overload
def sphere_volume(radius: Any = ..., volume: None = ...) -> Any: ...

def sphere_volume(radius: Any | None = ..., volume: Any | None = ...) -> Unit: ...